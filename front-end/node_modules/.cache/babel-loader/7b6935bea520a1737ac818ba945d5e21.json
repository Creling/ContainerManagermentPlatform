{"remainingRequest":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/babel-loader/lib/index.js!/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/src/components/page/Datacenter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/src/components/page/Datacenter.vue","mtime":1591179489040},{"path":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.date.now\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { fetchData } from \"../../api/index\";\nimport request from '@/utils/request';\nexport default {\n  name: 'basetable',\n  data: function data() {\n    return {\n      editVisible: false,\n      loginVisible: false,\n      action: '',\n      pagination: {\n        currentPage: 1,\n        pageSize: 5,\n        pageTotal: 0\n      },\n      tableData: [],\n      multipleSelection: [],\n      delList: [],\n      options: [],\n      selectValue: '',\n      idx: -1,\n      id: -1,\n      dialogFormVisible: false,\n      form: {},\n      login: {\n        username: '',\n        password: ''\n      },\n      formLabelWidth: '80px',\n      editform: ''\n    };\n  },\n  created: function created() {\n    this.getData();\n  },\n  methods: {\n    getData: function getData() {\n      var _this = this;\n\n      request.get('/api/datacenter').then(function (res) {\n        console.log(res);\n        _this.tableData = res.Datacenter;\n      }, function (error) {\n        console.log(error);\n      });\n    },\n    getOption: function getOption() {\n      var _this2 = this;\n\n      request.get('/api/city').then(function (res) {\n        console.log(res.Nation);\n        _this2.options = [];\n\n        for (var i = 0; i < res.Nation.length; i++) {\n          _this2.options.push({\n            'label': res.Nation[i].NationName,\n            'value': res.Nation[i].NationName\n          });\n        }\n      }, function (error) {\n        console.log(error);\n      });\n    },\n    // 登录\n    submitLogin: function submitLogin() {\n      var _this3 = this;\n\n      request.post('//39.96.212.204:8081/api/login', {\n        'user': this.login.username,\n        'password': this.login.password\n      }).then(function (res) {\n        _this3.$message.success('登录成功');\n\n        localStorage.setItem('ms_username', _this3.login.username);\n        _this3.loginVisible = false;\n\n        _this3.getData();\n      }, function (err) {\n        if (err === 403) {\n          _this3.$message.error(\"账户名或密码错误\");\n\n          _this3.login.username = '';\n          _this3.login.password = '';\n        }\n      });\n    },\n    // 删除操作\n    handleDelete: function handleDelete(index, row) {\n      var _this4 = this;\n\n      // 二次确认删除\n      console.log(row.NationName);\n      this.$confirm('确定要删除吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        request.delete('/api/datacenter', {\n          data: JSON.stringify({\n            'DatacenterName': row.DatacenterName\n          })\n        }).then(function (res) {\n          console.log(res);\n\n          _this4.$message.success('删除成功');\n\n          _this4.getData();\n        });\n      });\n    },\n    // 打开ssh连接页面\n    handleGo: function handleGo(index, row) {\n      var ip = row.server_ip;\n      var url = \"/ssh/\".concat(row.server_ip, \"/\").concat(Date.now().toString(35), \"/\").concat(row.server_name);\n      console.log(url);\n      this.$router.push(url);\n    },\n    // 打开sftp连接页面\n    handleDocument: function handleDocument(index, row) {\n      var ip = row.server_ip;\n      var url = \"/sftp/\".concat(row.server_ip, \"/\").concat(row.server_name);\n      console.log(url);\n      this.$router.push(url);\n    },\n    // 多选操作\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    delAllSelection: function delAllSelection() {\n      var length = this.multipleSelection.length;\n      var str = '';\n      this.delList = this.delList.concat(this.multipleSelection);\n\n      for (var i = 0; i < length; i++) {\n        str += this.multipleSelection[i].name + ' ';\n      }\n\n      this.$message.error(\"\\u5220\\u9664\\u4E86\".concat(str));\n      this.multipleSelection = [];\n    },\n    // 编辑操作\n    handleEdit: function handleEdit(index, row) {\n      this.action = '编辑';\n      this.dialogFormVisible = true;\n      this.form = Object.assign({}, row);\n    },\n    // 分页导航\n    handlePageChange: function handlePageChange(val) {\n      this.pagination.currentPage = val;\n    },\n    // 添加主机\n    handleAdd: function handleAdd() {\n      this.action = '添加';\n      this.dialogFormVisible = true;\n      this.form = {};\n      this.form.id = -1;\n    },\n    submitHost: function submitHost() {\n      var _this5 = this;\n\n      request.put('/api/datacenter', {\n        'DatacenterName': this.form.DatacenterName,\n        'DatacenterCapacity': this.form.DatacenterCapacity,\n        'DatacenterAvaliableCapacity': this.form.DatacenterAvaliableCapacity,\n        'CityName': this.form.CityName,\n        'NationName': this.form.NationName,\n        'Comment': this.form.Comment\n      }).then(function (res) {\n        console.log(res);\n        _this5.dialogFormVisible = false;\n\n        _this5.$message.success('添加成功');\n\n        _this5.getData();\n      }, function (err) {\n        if (err === 403) {\n          _this5.$message.error('未登录或登录已失效');\n        }\n      });\n    },\n    testmessage: function testmessage() {\n      this.$message.success('测试');\n    }\n  }\n};",{"version":3,"sources":["Datacenter.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item>\n                    <i class=\"el-icon-lx-cascades\"></i> 数据中心列表\n                </el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <div class=\"container\">\n            <div class=\"handle-box\">\n                <el-button\n                    type=\"primary\"\n                    icon=\"el-icon-delete\"\n                    class=\"handle-del mr10\"\n                    @click=\"getData\"\n                >刷新数据</el-button>\n                <el-button\n                    type=\"primary\"\n                    icon=\"el-icon-edit\"\n                    class=\"handle-add mr10\"\n                    @click=\"handleAdd\"\n                >添加数据中心</el-button>\n            </div>\n\n            <el-table\n                :data=\"tableData.slice((pagination.currentPage-1)*pagination.pageSize, pagination.currentPage*pagination.pageSize)\"\n                border\n                class=\"table\"\n                ref=\"multipleTable\"\n                header-cell-class-name=\"table-header\"\n                @selection-change=\"handleSelectionChange\"\n            >\n                <el-table-column type=\"index\"></el-table-column>\n                <el-table-column prop=\"DatacenterName\" label=\"数据中心名称\"></el-table-column>\n                <el-table-column prop=\"DatacenterCapacity\" label=\"数据中心容量\"></el-table-column>\n                <el-table-column prop=\"DatacenterAvaliableCapacity\" label=\"数据中心可用容量\" ></el-table-column>\n                <el-table-column prop=\"CityName\" label=\"所处城市\" ></el-table-column>\n                <el-table-column prop=\"NationName\" label=\"所处国家\" ></el-table-column>\n                <el-table-column prop=\"Comment\" label=\"备注\" ></el-table-column>\n                <el-table-column label=\"操作\" width=\"180\" align=\"center\">\n                    <template slot-scope=\"scope\">\n                        <el-button\n                            type=\"text\"\n                            icon=\"el-icon-delete\"\n                            class=\"red\"\n                            @click=\"handleDelete(scope.$index, scope.row)\"\n                        >删除</el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n            <div class=\"pagination\">\n                <el-pagination\n                    background\n                    layout=\"total, prev, pager, next\"\n                    :current-page=\"pagination.currentPage\"\n                    :page-size=\"pagination.pageSize\"\n                    :total=\"pagination.pageTotal\"\n                    @current-change=\"handlePageChange\"\n                ></el-pagination>\n            </div>\n        </div>\n        <el-dialog :title='action + \"数据中心\"' :visible.sync=\"dialogFormVisible\" width='40%'>\n            <el-form :model=\"form\" :label-position=\"'left'\">\n                <el-form-item label=\"中心名称\" :label-width=\"formLabelWidth\">\n                <el-input v-model=\"form.DatacenterName\" autocomplete=\"off\" size=\"small\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"总容量\" :label-width=\"formLabelWidth\">\n                <el-input v-model=\"form.DatacenterCapacity\" autocomplete=\"off\" size=\"small\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"可用容量\" :label-width=\"formLabelWidth\">\n                <el-input v-model=\"form.DatacenterAvaliableCapacity\" autocomplete=\"off\" size=\"small\"></el-input>      \n                </el-form-item>  \n                <el-form-item label=\"所在城市\" :label-width=\"formLabelWidth\">\n                <el-input v-model=\"form.CityName\" autocomplete=\"off\" size=\"small\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"所在国家\" :label-width=\"formLabelWidth\">\n                <el-input v-model=\"form.NationName\" autocomplete=\"off\" size=\"small\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"备注\" :label-width=\"formLabelWidth\">\n                <el-input v-model=\"form.Comment\" autocomplete=\"off\" size=\"small\"></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible=false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"submitHost()\">确 定</el-button>\n            </span>\n        </el-dialog>\n\n        <el-dialog title=\"登录\" :visible.sync=\"loginVisible\" width=\"30%\">\n            <el-form ref=\"form\" :model=\"form\" label-width=\"70px\">\n                <el-form-item label=\"用户名\">\n                    <el-input v-model=\"login.username\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"密码\">\n                    <el-input v-model=\"login.password\"></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"loginVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"submitLogin\">确 定</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport { fetchData } from '../../api/index';\nimport request from '@/utils/request';\nexport default {\n    name: 'basetable',\n    data() {\n        return {\n            editVisible: false,\n            loginVisible: false,\n            action: '',\n            pagination: {\n                currentPage: 1,\n                pageSize: 5,\n                pageTotal: 0,\n            },\n            tableData: [],\n            multipleSelection: [],\n            delList: [],\n            options:[],\n            selectValue: '',\n            idx: -1,\n            id: -1,\n            dialogFormVisible: false,\n            form: {},\n            login: {\n                username: '',\n                password: '',\n            },\n            formLabelWidth: '80px',\n            editform: '',\n        };\n    },\n    created() {\n        this.getData();\n    },\n    methods: {\n        getData() {\n            request.get('/api/datacenter').then(res => {\n                console.log(res);\n                this.tableData = res.Datacenter\n            }, error => {\n                console.log(error);\n            });\n        },\n        getOption() {\n            request.get('/api/city').then(res => {\n                console.log(res.Nation);\n                this.options = []\n                for (let i = 0; i < res.Nation.length; i++) {\n                    this.options.push({'label': res.Nation[i].NationName, 'value': res.Nation[i].NationName})\n                }\n            }, error => {\n                console.log(error);\n            });\n        },\n        // 登录\n        submitLogin() {\n            request.post('//39.96.212.204:8081/api/login',\n                            {'user': this.login.username, 'password': this.login.password},\n            ).then (res => {\n                this.$message.success('登录成功');\n                localStorage.setItem('ms_username', this.login.username);\n                this.loginVisible = false;\n                this.getData();\n            }, err => {                    \n                if (err === 403) {\n                    this.$message.error(\"账户名或密码错误\");\n                    this.login.username = '';\n                    this.login.password = '';\n                }\n            })\n        },\n        // 删除操作\n        handleDelete(index, row) {\n            // 二次确认删除\n            console.log(row.NationName)\n            this.$confirm('确定要删除吗？', '提示', {\n                type: 'warning'\n            })\n            .then(() => {\n                request.delete('/api/datacenter',\n                                {data: JSON.stringify(\n                                    {'DatacenterName': row.DatacenterName}\n                                )}\n                                ).then ( res => {\n                                    console.log(res)\n                                    this.$message.success('删除成功');\n                                    this.getData();\n                                })\n            })\n        },\n        // 打开ssh连接页面\n        handleGo(index, row) {\n            let ip = row.server_ip\n            let url = `/ssh/${row.server_ip}/${Date.now().toString(35)}/${row.server_name}`;\n            console.log(url);\n            this.$router.push(url);\n        },\n        // 打开sftp连接页面\n        handleDocument(index, row) {\n            let ip = row.server_ip\n            let url = `/sftp/${row.server_ip}/${row.server_name}`;\n            console.log(url);\n            this.$router.push(url);           \n        },\n        // 多选操作\n        handleSelectionChange(val) {\n            this.multipleSelection = val;\n        },\n        delAllSelection() {\n            const length = this.multipleSelection.length;\n            let str = '';\n            this.delList = this.delList.concat(this.multipleSelection);\n            for (let i = 0; i < length; i++) {\n                str += this.multipleSelection[i].name + ' ';\n            }\n            this.$message.error(`删除了${str}`);\n            this.multipleSelection = [];\n        },\n        // 编辑操作\n        handleEdit(index, row) {\n            this.action = '编辑'\n            this.dialogFormVisible = true\n            this.form = Object.assign({}, row)\n\n        },\n        // 分页导航\n        handlePageChange(val) {\n            this.pagination.currentPage = val\n        },\n        // 添加主机\n        handleAdd() {\n            this.action = '添加';\n            this.dialogFormVisible = true;\n            this.form = {};\n            this.form.id = -1\n\n        },\n        submitHost() {\n            request.put('/api/datacenter',\n                        {'DatacenterName': this.form.DatacenterName,\n                         'DatacenterCapacity': this.form.DatacenterCapacity, \n                         'DatacenterAvaliableCapacity': this.form.DatacenterAvaliableCapacity,\n                         'CityName': this.form.CityName,\n                         'NationName': this.form.NationName,\n                         'Comment': this.form.Comment,\n                        }, \n            ).then( res => {\n                console.log(res);\n                this.dialogFormVisible = false;\n                this.$message.success('添加成功');\n                this.getData();\n            }, err =>{\n                if (err === 403) {\n                    this.$message.error('未登录或登录已失效');\n                }\n            });\n\n        },\n        testmessage()\n        {\n            this.$message.success('测试');\n        }\n    }\n};\n</script>\n\n<style scoped>\n.handle-box {\n    margin-bottom: 20px;\n}\n\n.handle-select {\n    width: 120px;\n}\n\n.handle-input {\n    width: 300px;\n    display: inline-block;\n}\n.table {\n    width: 100%;\n    font-size: 14px;\n}\n.red {\n    color: #ff0000;\n}\n.mr10 {\n    margin-right: 10px;\n}\n.table-td-thumb {\n    display: block;\n    margin: auto;\n    width: 40px;\n    height: 40px;\n}\n</style>\n"],"sourceRoot":"src/components/page"}]}