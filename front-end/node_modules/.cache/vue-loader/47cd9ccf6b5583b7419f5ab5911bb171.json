{"remainingRequest":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/src/components/page/ServiceContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/src/components/page/ServiceContainer.vue","mtime":1591187447660},{"path":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport request from '@/utils/request';\nexport default {\n    name: 'basetable',\n    data() {\n        return {\n            editVisible: false,\n            loginVisible: false,\n            action: '',\n            pagination: {\n                currentPage: 1,\n                pageSize: 10,\n                pageTotal: 2\n            },\n            tableData: [],\n            multipleSelection: [],\n            delList: [],\n            ServiceName: '',\n            ContainerName: '',\n            ContainerNameOptions: [],\n            ServiceNameOptions: [],\n            idx: -1,\n            id: -1,\n            dialogFormVisible: false,\n            form: {},\n            login: {\n                username: '',\n                password: ''\n            },\n            formLabelWidth: '80px',\n            editform: '',\n            spanArr: [],\n            position: 0,\n            advance: {},\n            advanceVisable: false,\n        };\n    },\n    created() {\n        this.getData();\n    },\n    methods: {\n        getData() {\n            this.tableData = [];\n            request.get('/api/servicecontainer').then(\n                res => {\n                    console.log(res);\n                    this.tableData = res.ContainerService;\n                    this.tableData.forEach((item, index) => {\n                        console.log('forEach');\n                        if (index === 0) {\n                            this.spanArr.push(1);\n                            this.position = 0;\n                        } else {\n                            if (this.tableData[index].ServiceName === this.tableData[index - 1].ServiceName) {\n                                this.spanArr[this.position] += 1;\n                                this.spanArr.push(0);\n                            } else {\n                                this.spanArr.push(1);\n                                this.position = index;\n                            }\n                        }\n                    });\n                },\n                error => {\n                    console.log(error);\n                }\n            );\n        },\n        getOption() {\n            request.get('/api/service').then(\n                res => {\n                    console.log(res.Service);\n                    this.ServiceNameOptions = [];\n                    for (let i = 0; i < res.Service.length; i++) {\n                        this.ServiceNameOptions.push({ label: res.Service[i].ServiceName, value: res.Service[i].ServiceName });\n                    }\n                },\n                error => {\n                    console.log(error);\n                }\n            );\n\n            request.get('/api/container').then(\n                res => {\n                    console.log(res.Container);\n                    this.ContainerNameOptions = [];\n                    for (let i = 0; i < res.Container.length; i++) {\n                        this.ContainerNameOptions.push({ label: res.Container[i].ContainerName, value: res.Container[i].ContainerName });\n                    }\n                },\n                error => {\n                    console.log(error);\n                }\n            );\n        },\n        // 登录\n        submitLogin() {\n            request.post('//39.96.212.204:8081/api/login', { user: this.login.username, password: this.login.password }).then(\n                res => {\n                    this.$message.success('登录成功');\n                    localStorage.setItem('ms_username', this.login.username);\n                    this.loginVisible = false;\n                    this.getData();\n                },\n                err => {\n                    if (err === 403) {\n                        this.$message.error('账户名或密码错误');\n                        this.login.username = '';\n                        this.login.password = '';\n                    }\n                }\n            );\n        },\n        // 删除操作\n        handleDelete(index, row) {\n            // 二次确认删除\n            console.log(row.NationName);\n            this.$confirm('确定要删除吗？', '提示', {\n                type: 'warning'\n            }).then(() => {\n                request\n                    .delete('/api/servicecontainer', {\n                        data: JSON.stringify({ ServiceName: row.ServiceName, ContainerName: row.ContainerName })\n                    })\n                    .then(res => {\n                        console.log(res);\n                        this.$message.success('删除成功');\n                        this.getData();\n                    });\n            });\n        },\n        // 打开ssh连接页面\n        handleGo(index, row) {\n            let ip = row.server_ip;\n            let url = `/ssh/${row.server_ip}/${Date.now().toString(35)}/${row.server_name}`;\n            console.log(url);\n            this.$router.push(url);\n        },\n        // 打开sftp连接页面\n        handleDocument(index, row) {\n            let ip = row.server_ip;\n            let url = `/sftp/${row.server_ip}/${row.server_name}`;\n            console.log(url);\n            this.$router.push(url);\n        },\n        // 多选操作\n        handleSelectionChange(val) {\n            this.multipleSelection = val;\n        },\n        delAllSelection() {\n            const length = this.multipleSelection.length;\n            let str = '';\n            this.delList = this.delList.concat(this.multipleSelection);\n            for (let i = 0; i < length; i++) {\n                str += this.multipleSelection[i].name + ' ';\n            }\n            this.$message.error(`删除了${str}`);\n            this.multipleSelection = [];\n        },\n        // 编辑操作\n        handleEdit(index, row) {\n            this.action = '编辑';\n            this.dialogFormVisible = true;\n            this.form = Object.assign({}, row);\n        },\n        // 分页导航\n        handlePageChange(val) {\n            this.pagination.currentPage = val;\n        },\n        // 添加主机\n        handleAdd() {\n            this.action = '添加';\n            this.form = {};\n            this.getOption();\n            this.dialogFormVisible = true;\n        },\n        submitHost() {\n            request\n                .put('/api/servicecontainer', {\n                    ContainerName: this.ContainerName,\n                    ServiceName: this.ServiceName,\n                    StartTime: this.form.StartTime,\n                    Comment: this.form.Comment\n                })\n                .then(\n                    res => {\n                        console.log(res);\n                        this.dialogFormVisible = false;\n                        this.$message.success('添加成功');\n                        this.getData();\n                    },\n                    err => {\n                        if (err === 403) {\n                            this.$message.error('未登录或登录已失效');\n                        }\n                    }\n                );\n        },\n        objectSpanMethod({ row, column, rowIndex, columnIndex }) {\n            if (columnIndex === 0) {\n                const _row = this.spanArr[rowIndex];\n                const _col = _row > 0 ? 1 : 0;\n                return {\n                    rowspan: _row,\n                    colspan: _col\n                };\n            }\n            if (columnIndex === 1) {\n                const _row = this.spanArr[rowIndex];\n                const _col = _row > 0 ? 1 : 0;\n                return {\n                    rowspan: _row,\n                    colspan: _col\n                };\n            }\n        },\n        submitAdvanceInfo() {\n            if ((this.action === \"高级删除\")) {\n                this.$confirm('确定要删除吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    request\n                        .delete('/api/servicecontainer', { data: JSON.stringify({ Char: this.advance.Char, Value: this.advance.Value }) })\n                        .then(res => {\n                            this.$message.success('删除成功');\n                            this.getData();\n                        });\n                });\n            } else if ((this.action === \"高级筛选\")) {\n                request.get('/api/servicecontainer', { params: { Char: this.advance.Char, Value: this.advance.Value } }).then(res => {\n                    this.$message.success('筛选成功');\n                    this.advanceVisable = false\n                    this.tableData = res.ContainerService\n                });\n            }\n        },\n        handleAdvanceDelete() {\n            this.action = '高级删除';\n            this.advanceVisable = true;\n        },\n        handleAdvanceSelect() {\n            this.action = '高级筛选';\n            this.advanceVisable = true;\n        }\n    }\n};\n",{"version":3,"sources":["ServiceContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"ServiceContainer.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item>\n                    <i class=\"el-icon-lx-cascades\"></i> 容器列表\n                </el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <div class=\"container\">\n            <div class=\"handle-box\">\n                <el-button\n                    type=\"primary\"\n                    icon=\"el-icon-delete\"\n                    class=\"handle-del mr10\"\n                    @click=\"getData\"\n                >刷新数据</el-button>\n                <el-button\n                    type=\"primary\"\n                    icon=\"el-icon-edit\"\n                    class=\"handle-add mr10\"\n                    @click=\"handleAdd\"\n                >部署服务</el-button>\n                <el-button\n                    type=\"primary\"\n                    icon=\"el-icon-edit\"\n                    class=\"handle-add mr10\"\n                    @click=\"handleAdvanceDelete\"\n                >高级删除</el-button>\n                <el-button\n                    type=\"primary\"\n                    icon=\"el-icon-edit\"\n                    class=\"handle-add mr10\"\n                    @click=\"handleAdvanceSelect\"\n                >高级筛选</el-button>\n            </div>\n\n            <el-table\n                :data=\"tableData.slice((pagination.currentPage-1)*pagination.pageSize, pagination.currentPage*pagination.pageSize)\"\n                border\n                class=\"table\"\n                ref=\"multipleTable\"\n                header-cell-class-name=\"table-header\"\n                @selection-change=\"handleSelectionChange\"\n                :span-method=\"objectSpanMethod\"\n            >\n                <el-table-column prop=\"ServiceName\" label=\"服务名称\"></el-table-column>\n                <el-table-column prop=\"Describe\" label=\"描述\"></el-table-column>\n                <el-table-column prop=\"ContainerName\" label=\"容器名称\"></el-table-column>\n                <el-table-column prop=\"DatacenterName\" label=\"数据中心\"></el-table-column>\n                <el-table-column prop=\"CityName\" label=\"城市\"></el-table-column>\n                <el-table-column prop=\"NationName\" label=\"国家\"></el-table-column>\n                <el-table-column prop=\"StartTime\" label=\"启动时间\"></el-table-column>\n                <el-table-column prop=\"ServiceComment\" label=\"备注\"></el-table-column>\n                <el-table-column label=\"操作\" width=\"180\" align=\"center\">\n                    <template slot-scope=\"scope\">\n                        <el-button\n                            type=\"text\"\n                            icon=\"el-icon-delete\"\n                            class=\"red\"\n                            @click=\"handleDelete(scope.$index, scope.row)\"\n                        >删除</el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n            <div class=\"pagination\">\n                <el-pagination\n                    background\n                    layout=\"total, prev, pager, next\"\n                    :current-page=\"pagination.currentPage\"\n                    :page-size=\"pagination.pageSize\"\n                    :total=\"pagination.pageTotal\"\n                    @current-change=\"handlePageChange\"\n                ></el-pagination>\n            </div>\n        </div>\n        <el-dialog :title=\"action + '服务'\" :visible.sync=\"dialogFormVisible\" width=\"40%\">\n            <el-form :model=\"form\" :label-position=\"'left'\">\n                <el-form-item label=\"服务名称\" :label-width=\"formLabelWidth\">\n                    <el-select v-model=\"ServiceName\" placeholder=\"请选择\">\n                        <el-option\n                            v-for=\"item in ServiceNameOptions\"\n                            :key=\"item.value\"\n                            :label=\"item.label\"\n                            :value=\"item.value\"\n                        ></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"容器名称\" :label-width=\"formLabelWidth\">\n                    <el-select v-model=\"ContainerName\" placeholder=\"请选择\">\n                        <el-option\n                            v-for=\"item in ContainerNameOptions\"\n                            :key=\"item.value\"\n                            :label=\"item.label\"\n                            :value=\"item.value\"\n                        ></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"启动时间\" :label-width=\"formLabelWidth\">\n                    <el-input v-model=\"form.StartTime\" autocomplete=\"off\" size=\"small\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"备注\" :label-width=\"formLabelWidth\">\n                    <el-input v-model=\"form.Comment\" autocomplete=\"off\" size=\"small\"></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible=false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"submitHost()\">确 定</el-button>\n            </span>\n        </el-dialog>\n\n        <el-dialog :title=\"action\" :visible.sync=\"advanceVisable\" width=\"40%\">\n            <el-form :model=\"advance\" :label-position=\"'left'\">\n                <el-form-item label=\"属性\" :label-width=\"formLabelWidth\">\n                    <el-input v-model=\"advance.Char\" autocomplete=\"off\" size=\"small\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"属性值\" :label-width=\"formLabelWidth\">\n                    <el-input v-model=\"advance.Value\" autocomplete=\"off\" size=\"small\"></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible=false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"submitAdvanceInfo()\">确 定</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport request from '@/utils/request';\nexport default {\n    name: 'basetable',\n    data() {\n        return {\n            editVisible: false,\n            loginVisible: false,\n            action: '',\n            pagination: {\n                currentPage: 1,\n                pageSize: 10,\n                pageTotal: 2\n            },\n            tableData: [],\n            multipleSelection: [],\n            delList: [],\n            ServiceName: '',\n            ContainerName: '',\n            ContainerNameOptions: [],\n            ServiceNameOptions: [],\n            idx: -1,\n            id: -1,\n            dialogFormVisible: false,\n            form: {},\n            login: {\n                username: '',\n                password: ''\n            },\n            formLabelWidth: '80px',\n            editform: '',\n            spanArr: [],\n            position: 0,\n            advance: {},\n            advanceVisable: false,\n        };\n    },\n    created() {\n        this.getData();\n    },\n    methods: {\n        getData() {\n            this.tableData = [];\n            request.get('/api/servicecontainer').then(\n                res => {\n                    console.log(res);\n                    this.tableData = res.ContainerService;\n                    this.tableData.forEach((item, index) => {\n                        console.log('forEach');\n                        if (index === 0) {\n                            this.spanArr.push(1);\n                            this.position = 0;\n                        } else {\n                            if (this.tableData[index].ServiceName === this.tableData[index - 1].ServiceName) {\n                                this.spanArr[this.position] += 1;\n                                this.spanArr.push(0);\n                            } else {\n                                this.spanArr.push(1);\n                                this.position = index;\n                            }\n                        }\n                    });\n                },\n                error => {\n                    console.log(error);\n                }\n            );\n        },\n        getOption() {\n            request.get('/api/service').then(\n                res => {\n                    console.log(res.Service);\n                    this.ServiceNameOptions = [];\n                    for (let i = 0; i < res.Service.length; i++) {\n                        this.ServiceNameOptions.push({ label: res.Service[i].ServiceName, value: res.Service[i].ServiceName });\n                    }\n                },\n                error => {\n                    console.log(error);\n                }\n            );\n\n            request.get('/api/container').then(\n                res => {\n                    console.log(res.Container);\n                    this.ContainerNameOptions = [];\n                    for (let i = 0; i < res.Container.length; i++) {\n                        this.ContainerNameOptions.push({ label: res.Container[i].ContainerName, value: res.Container[i].ContainerName });\n                    }\n                },\n                error => {\n                    console.log(error);\n                }\n            );\n        },\n        // 登录\n        submitLogin() {\n            request.post('//39.96.212.204:8081/api/login', { user: this.login.username, password: this.login.password }).then(\n                res => {\n                    this.$message.success('登录成功');\n                    localStorage.setItem('ms_username', this.login.username);\n                    this.loginVisible = false;\n                    this.getData();\n                },\n                err => {\n                    if (err === 403) {\n                        this.$message.error('账户名或密码错误');\n                        this.login.username = '';\n                        this.login.password = '';\n                    }\n                }\n            );\n        },\n        // 删除操作\n        handleDelete(index, row) {\n            // 二次确认删除\n            console.log(row.NationName);\n            this.$confirm('确定要删除吗？', '提示', {\n                type: 'warning'\n            }).then(() => {\n                request\n                    .delete('/api/servicecontainer', {\n                        data: JSON.stringify({ ServiceName: row.ServiceName, ContainerName: row.ContainerName })\n                    })\n                    .then(res => {\n                        console.log(res);\n                        this.$message.success('删除成功');\n                        this.getData();\n                    });\n            });\n        },\n        // 打开ssh连接页面\n        handleGo(index, row) {\n            let ip = row.server_ip;\n            let url = `/ssh/${row.server_ip}/${Date.now().toString(35)}/${row.server_name}`;\n            console.log(url);\n            this.$router.push(url);\n        },\n        // 打开sftp连接页面\n        handleDocument(index, row) {\n            let ip = row.server_ip;\n            let url = `/sftp/${row.server_ip}/${row.server_name}`;\n            console.log(url);\n            this.$router.push(url);\n        },\n        // 多选操作\n        handleSelectionChange(val) {\n            this.multipleSelection = val;\n        },\n        delAllSelection() {\n            const length = this.multipleSelection.length;\n            let str = '';\n            this.delList = this.delList.concat(this.multipleSelection);\n            for (let i = 0; i < length; i++) {\n                str += this.multipleSelection[i].name + ' ';\n            }\n            this.$message.error(`删除了${str}`);\n            this.multipleSelection = [];\n        },\n        // 编辑操作\n        handleEdit(index, row) {\n            this.action = '编辑';\n            this.dialogFormVisible = true;\n            this.form = Object.assign({}, row);\n        },\n        // 分页导航\n        handlePageChange(val) {\n            this.pagination.currentPage = val;\n        },\n        // 添加主机\n        handleAdd() {\n            this.action = '添加';\n            this.form = {};\n            this.getOption();\n            this.dialogFormVisible = true;\n        },\n        submitHost() {\n            request\n                .put('/api/servicecontainer', {\n                    ContainerName: this.ContainerName,\n                    ServiceName: this.ServiceName,\n                    StartTime: this.form.StartTime,\n                    Comment: this.form.Comment\n                })\n                .then(\n                    res => {\n                        console.log(res);\n                        this.dialogFormVisible = false;\n                        this.$message.success('添加成功');\n                        this.getData();\n                    },\n                    err => {\n                        if (err === 403) {\n                            this.$message.error('未登录或登录已失效');\n                        }\n                    }\n                );\n        },\n        objectSpanMethod({ row, column, rowIndex, columnIndex }) {\n            if (columnIndex === 0) {\n                const _row = this.spanArr[rowIndex];\n                const _col = _row > 0 ? 1 : 0;\n                return {\n                    rowspan: _row,\n                    colspan: _col\n                };\n            }\n            if (columnIndex === 1) {\n                const _row = this.spanArr[rowIndex];\n                const _col = _row > 0 ? 1 : 0;\n                return {\n                    rowspan: _row,\n                    colspan: _col\n                };\n            }\n        },\n        submitAdvanceInfo() {\n            if ((this.action === \"高级删除\")) {\n                this.$confirm('确定要删除吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    request\n                        .delete('/api/servicecontainer', { data: JSON.stringify({ Char: this.advance.Char, Value: this.advance.Value }) })\n                        .then(res => {\n                            this.$message.success('删除成功');\n                            this.getData();\n                        });\n                });\n            } else if ((this.action === \"高级筛选\")) {\n                request.get('/api/servicecontainer', { params: { Char: this.advance.Char, Value: this.advance.Value } }).then(res => {\n                    this.$message.success('筛选成功');\n                    this.advanceVisable = false\n                    this.tableData = res.ContainerService\n                });\n            }\n        },\n        handleAdvanceDelete() {\n            this.action = '高级删除';\n            this.advanceVisable = true;\n        },\n        handleAdvanceSelect() {\n            this.action = '高级筛选';\n            this.advanceVisable = true;\n        }\n    }\n};\n</script>\n\n<style scoped>\n.handle-box {\n    margin-bottom: 20px;\n}\n\n.handle-select {\n    width: 120px;\n}\n\n.handle-input {\n    width: 300px;\n    display: inline-block;\n}\n.table {\n    width: 100%;\n    font-size: 14px;\n}\n.red {\n    color: #ff0000;\n}\n.mr10 {\n    margin-right: 10px;\n}\n.table-td-thumb {\n    display: block;\n    margin: auto;\n    width: 40px;\n    height: 40px;\n}\n</style>\n"]}]}