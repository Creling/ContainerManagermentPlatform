{"remainingRequest":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/src/components/page/Provider.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/src/components/page/Provider.vue","mtime":1591521199051},{"path":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/creling/codes/数据库基础课程设计/ContainerManagermentPlatform/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { fetchData } from '../../api/index';\nimport request from '@/utils/request';\nexport default {\n    name: 'basetable',\n    data() {\n        return {\n            editVisible: false,\n            loginVisible: false,\n            action: '',\n            pagination: {\n                currentPage: 1,\n                pageSize: 5,\n                pageTotal: 0,\n            },\n            tableData: [],\n            multipleSelection: [],\n            delList: [],\n            EstablishedTime: '',\n            NationName: '',\n            options:[],\n            selectValue: '',\n            idx: -1,\n            id: -1,\n            dialogFormVisible: false,\n            form: {},\n            login: {\n                username: '',\n                password: '',\n            },\n            formLabelWidth: '90px',\n            editform: '',\n        };\n    },\n    created() {\n        this.getData();\n    },\n    methods: {\n        getData() {\n            request.get('/api/provider').then(res => {\n                console.log(res);\n                this.tableData = res.Provider\n            }, error => {\n                console.log(error);\n            });\n        },\n        getOption() {\n            request.get('/api/nation').then(res => {\n                console.log(res.Nation);\n                this.options = []\n                for (let i = 0; i < res.Nation.length; i++) {\n                    this.options.push({'label': res.Nation[i].NationName, 'value': res.Nation[i].NationName})\n                }\n            }, error => {\n                console.log(error);\n            });\n        },\n        // 登录\n        submitLogin() {\n            request.post('//39.96.212.204:8081/api/login',\n                            {'user': this.login.username, 'password': this.login.password},\n            ).then (res => {\n                this.$message.success('登录成功');\n                localStorage.setItem('ms_username', this.login.username);\n                this.loginVisible = false;\n                this.getData();\n            }, err => {                    \n                if (err === 403) {\n                    this.$message.error(\"账户名或密码错误\");\n                    this.login.username = '';\n                    this.login.password = '';\n                }\n            })\n        },\n        // 删除操作\n        handleDelete(index, row) {\n            // 二次确认删除\n            console.log(row.NationName)\n            this.$confirm('确定要删除吗？', '提示', {\n                type: 'warning'\n            })\n            .then(() => {\n                request.delete('/api/provider',\n                                {data: JSON.stringify(\n                                    {'ProviderName': row.ProviderName,\n                                     'NationName': row.NationName_id}\n                                )}\n                                ).then ( res => {\n                                    console.log(res)\n                                    this.$message.success('删除成功');\n                                    this.getData();\n                                }, err => {\n                                    if (err === 403) {\n                                        this.$message.error('未登录或登录已失效');\n                                    }else if (err > 500) {\n                                        this.$message.error('服务器错误');\n                                    }\n\n                                })\n            })\n        },\n        // 打开ssh连接页面\n        handleGo(index, row) {\n            let ip = row.server_ip\n            let url = `/ssh/${row.server_ip}/${Date.now().toString(35)}/${row.server_name}`;\n            console.log(url);\n            this.$router.push(url);\n        },\n        // 打开sftp连接页面\n        handleDocument(index, row) {\n            let ip = row.server_ip\n            let url = `/sftp/${row.server_ip}/${row.server_name}`;\n            console.log(url);\n            this.$router.push(url);           \n        },\n        // 多选操作\n        handleSelectionChange(val) {\n            this.multipleSelection = val;\n        },\n        delAllSelection() {\n            const length = this.multipleSelection.length;\n            let str = '';\n            this.delList = this.delList.concat(this.multipleSelection);\n            for (let i = 0; i < length; i++) {\n                str += this.multipleSelection[i].name + ' ';\n            }\n            this.$message.error(`删除了${str}`);\n            this.multipleSelection = [];\n        },\n        // 编辑操作\n        handleEdit(index, row) {\n            this.action = '编辑'\n            this.dialogFormVisible = true\n            this.form = Object.assign({}, row)\n\n        },\n        // 分页导航\n        handlePageChange(val) {\n            this.pagination.currentPage = val\n        },\n        // 添加主机\n        handleAdd() {\n            this.action = '添加';\n            this.dialogFormVisible = true;\n            this.getOption()\n        },\n        submitHost() {\n            request.put('/api/provider',\n                        {'ProviderName': this.form.ProviderName,\n                         'NationName': this.NationName, \n                         'EstablishedTime': this.form.EstablishedTime,\n                         'Comment': this.form.Comment,\n                        }, \n            ).then( res => {\n                console.log(res);\n                this.dialogFormVisible = false;\n                this.$message.success('添加成功');\n                this.getData();\n            }, err =>{\n                if (err === 403) {\n                    this.$message.error('未登录或登录已失效');\n                }\n            });\n\n        },\n        testmessage()\n        {\n            this.$message.success('测试');\n        }\n    }\n};\n",{"version":3,"sources":["Provider.vue"],"names":[],"mappingsfile":"Provider.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item>\n                    <i class=\"el-icon-lx-cascades\"></i> 提供商列表\n                </el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <div class=\"container\">\n            <div class=\"handle-box\">\n                <el-button\n                    type=\"primary\"\n                    icon=\"el-icon-delete\"\n                    class=\"handle-del mr10\"\n                    @click=\"getData\"\n                >刷新数据</el-button>\n                <el-button\n                    type=\"primary\"\n                    icon=\"el-icon-edit\"\n                    class=\"handle-add mr10\"\n                    @click=\"handleAdd\"\n                >添加提供商</el-button>\n            </div>\n\n            <el-table\n                :data=\"tableData.slice((pagination.currentPage-1)*pagination.pageSize, pagination.currentPage*pagination.pageSize)\"\n                border\n                class=\"table\"\n                ref=\"multipleTable\"\n                header-cell-class-name=\"table-header\"\n                @selection-change=\"handleSelectionChange\"\n            >\n\n                <el-table-column prop=\"id\" label=\"ID\" v-if='false' ></el-table-column>\n                <el-table-column type=\"index\"></el-table-column>\n                <el-table-column prop=\"ProviderName\" label=\"提供商名称\"></el-table-column>\n                <el-table-column prop=\"NationName_id\" label=\"所在国家\"></el-table-column>\n                <el-table-column prop=\"EstablishedTime\" label=\"成立时间\" ></el-table-column>\n                <el-table-column prop=\"Comment\" label=\"备注\" ></el-table-column>\n                <el-table-column label=\"操作\" width=\"180\" align=\"center\">\n                    <template slot-scope=\"scope\">\n                        <el-button\n                            type=\"text\"\n                            icon=\"el-icon-delete\"\n                            class=\"red\"\n                            @click=\"handleDelete(scope.$index, scope.row)\"\n                        >删除</el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n            <div class=\"pagination\">\n                <el-pagination\n                    background\n                    layout=\"total, prev, pager, next\"\n                    :current-page=\"pagination.currentPage\"\n                    :page-size=\"pagination.pageSize\"\n                    :total=\"pagination.pageTotal\"\n                    @current-change=\"handlePageChange\"\n                ></el-pagination>\n            </div>\n        </div>\n        <el-dialog :title='action + \"提供商\"' :visible.sync=\"dialogFormVisible\" width='40%'>\n            <el-form :model=\"form\" :label-position=\"'left'\">\n                <el-form-item label=\"提供商名称\" :label-width=\"formLabelWidth\">\n                <el-input v-model=\"form.ProviderName\" autocomplete=\"off\" ></el-input>\n                </el-form-item>\n                <el-form-item label=\"所在国家\" :label-width=\"formLabelWidth\">\n                    <el-select v-model=\"NationName\" placeholder=\"请选择\">\n                        <el-option\n                        v-for=\"item in options\"\n                        :key=\"item.value\"\n                        :label=\"item.label\"\n                        :value=\"item.value\">\n                        </el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"成立时间\" :label-width=\"formLabelWidth\">\n                <el-input v-model=\"form.EstablishedTime\" autocomplete=\"off\" ></el-input>\n                </el-form-item>\n                <el-form-item label=\"备注\" :label-width=\"formLabelWidth\">\n                <el-input v-model=\"form.Comment\" autocomplete=\"off\" ></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible=false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"submitHost()\">确 定</el-button>\n            </span>\n        </el-dialog>\n\n        <el-dialog title=\"登录\" :visible.sync=\"loginVisible\" width=\"30%\">\n            <el-form ref=\"form\" :model=\"form\" label-width=\"70px\">\n                <el-form-item label=\"用户名\">\n                    <el-input v-model=\"login.username\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"密码\">\n                    <el-input v-model=\"login.password\"></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"loginVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"submitLogin\">确 定</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport { fetchData } from '../../api/index';\nimport request from '@/utils/request';\nexport default {\n    name: 'basetable',\n    data() {\n        return {\n            editVisible: false,\n            loginVisible: false,\n            action: '',\n            pagination: {\n                currentPage: 1,\n                pageSize: 5,\n                pageTotal: 0,\n            },\n            tableData: [],\n            multipleSelection: [],\n            delList: [],\n            EstablishedTime: '',\n            NationName: '',\n            options:[],\n            selectValue: '',\n            idx: -1,\n            id: -1,\n            dialogFormVisible: false,\n            form: {},\n            login: {\n                username: '',\n                password: '',\n            },\n            formLabelWidth: '90px',\n            editform: '',\n        };\n    },\n    created() {\n        this.getData();\n    },\n    methods: {\n        getData() {\n            request.get('/api/provider').then(res => {\n                console.log(res);\n                this.tableData = res.Provider\n            }, error => {\n                console.log(error);\n            });\n        },\n        getOption() {\n            request.get('/api/nation').then(res => {\n                console.log(res.Nation);\n                this.options = []\n                for (let i = 0; i < res.Nation.length; i++) {\n                    this.options.push({'label': res.Nation[i].NationName, 'value': res.Nation[i].NationName})\n                }\n            }, error => {\n                console.log(error);\n            });\n        },\n        // 登录\n        submitLogin() {\n            request.post('//39.96.212.204:8081/api/login',\n                            {'user': this.login.username, 'password': this.login.password},\n            ).then (res => {\n                this.$message.success('登录成功');\n                localStorage.setItem('ms_username', this.login.username);\n                this.loginVisible = false;\n                this.getData();\n            }, err => {                    \n                if (err === 403) {\n                    this.$message.error(\"账户名或密码错误\");\n                    this.login.username = '';\n                    this.login.password = '';\n                }\n            })\n        },\n        // 删除操作\n        handleDelete(index, row) {\n            // 二次确认删除\n            console.log(row.NationName)\n            this.$confirm('确定要删除吗？', '提示', {\n                type: 'warning'\n            })\n            .then(() => {\n                request.delete('/api/provider',\n                                {data: JSON.stringify(\n                                    {'ProviderName': row.ProviderName,\n                                     'NationName': row.NationName_id}\n                                )}\n                                ).then ( res => {\n                                    console.log(res)\n                                    this.$message.success('删除成功');\n                                    this.getData();\n                                }, err => {\n                                    if (err === 403) {\n                                        this.$message.error('未登录或登录已失效');\n                                    }else if (err > 500) {\n                                        this.$message.error('服务器错误');\n                                    }\n\n                                })\n            })\n        },\n        // 打开ssh连接页面\n        handleGo(index, row) {\n            let ip = row.server_ip\n            let url = `/ssh/${row.server_ip}/${Date.now().toString(35)}/${row.server_name}`;\n            console.log(url);\n            this.$router.push(url);\n        },\n        // 打开sftp连接页面\n        handleDocument(index, row) {\n            let ip = row.server_ip\n            let url = `/sftp/${row.server_ip}/${row.server_name}`;\n            console.log(url);\n            this.$router.push(url);           \n        },\n        // 多选操作\n        handleSelectionChange(val) {\n            this.multipleSelection = val;\n        },\n        delAllSelection() {\n            const length = this.multipleSelection.length;\n            let str = '';\n            this.delList = this.delList.concat(this.multipleSelection);\n            for (let i = 0; i < length; i++) {\n                str += this.multipleSelection[i].name + ' ';\n            }\n            this.$message.error(`删除了${str}`);\n            this.multipleSelection = [];\n        },\n        // 编辑操作\n        handleEdit(index, row) {\n            this.action = '编辑'\n            this.dialogFormVisible = true\n            this.form = Object.assign({}, row)\n\n        },\n        // 分页导航\n        handlePageChange(val) {\n            this.pagination.currentPage = val\n        },\n        // 添加主机\n        handleAdd() {\n            this.action = '添加';\n            this.dialogFormVisible = true;\n            this.getOption()\n        },\n        submitHost() {\n            request.put('/api/provider',\n                        {'ProviderName': this.form.ProviderName,\n                         'NationName': this.NationName, \n                         'EstablishedTime': this.form.EstablishedTime,\n                         'Comment': this.form.Comment,\n                        }, \n            ).then( res => {\n                console.log(res);\n                this.dialogFormVisible = false;\n                this.$message.success('添加成功');\n                this.getData();\n            }, err =>{\n                if (err === 403) {\n                    this.$message.error('未登录或登录已失效');\n                }\n            });\n\n        },\n        testmessage()\n        {\n            this.$message.success('测试');\n        }\n    }\n};\n</script>\n\n<style scoped>\n.handle-box {\n    margin-bottom: 20px;\n}\n\n.handle-select {\n    width: 120px;\n}\n\n.handle-input {\n    width: 300px;\n    display: inline-block;\n}\n.table {\n    width: 100%;\n    font-size: 14px;\n}\n.red {\n    color: #ff0000;\n}\n.mr10 {\n    margin-right: 10px;\n}\n.table-td-thumb {\n    display: block;\n    margin: auto;\n    width: 40px;\n    height: 40px;\n}\n</style>\n"]}]}